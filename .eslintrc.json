{
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "project": "tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "root": true,
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier"
  ],
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "plugins": [
    "@typescript-eslint",
    "simple-import-sort",
    "import",
    "sort-keys-fix",
    "security",
    "filenames",
    "unicorn",
    "prettier"
    // "node",
  ],
  "rules": {
    "prefer-exponentiation-operator": "warn",
    "unicorn/better-regex": "warn",
    "unicorn/catch-error-name": "warn",
    "unicorn/consistent-function-scoping": "error",
    "unicorn/custom-error-definition": "warn",
    "unicorn/error-message": "error",
    "unicorn/escape-case": "warn",
    "unicorn/expiring-todo-comments": "error",
    "unicorn/explicit-length-check": "warn",
    "unicorn/filename-case": "error",
    "unicorn/import-index": "warn",
    "unicorn/import-style": "error",
    "unicorn/new-for-builtins": "warn",
    "unicorn/no-abusive-eslint-disable": "off",
    "unicorn/no-array-instanceof": "warn",
    "unicorn/no-console-spaces": "warn",
    "unicorn/no-fn-reference-in-iterator": "error",
    "unicorn/no-for-loop": "warn",
    "unicorn/no-hex-escape": "warn",
    "unicorn/no-keyword-prefix": "error",
    // duplicate  "unicorn/no-nested-ternary": "warn",
    "unicorn/no-new-buffer": "warn",
    "unicorn/no-null": "off",
    "unicorn/no-object-as-default-parameter": "off",
    "unicorn/no-process-exit": "error",
    "unicorn/no-reduce": "off",
    "unicorn/no-unreadable-array-destructuring": "error",
    "unicorn/no-unsafe-regex": "error",
    "unicorn/no-unused-properties": "error",
    "unicorn/no-useless-undefined": "warn",
    "unicorn/no-zero-fractions": "warn",
    // duplicate  "unicorn/number-literal-case": "warn",
    "unicorn/numeric-separators-style": "warn",
    "unicorn/prefer-add-event-listener": "warn",
    "unicorn/prefer-array-find": "warn",
    "unicorn/prefer-dataset": "warn",
    "unicorn/prefer-event-key": "warn",
    "unicorn/prefer-flat-map": "warn",
    "unicorn/prefer-includes": "warn",
    "unicorn/prefer-math-trunc": "warn",
    "unicorn/prefer-modern-dom-apis": "warn",
    "unicorn/prefer-negative-index": "warn",
    "unicorn/prefer-node-append": "warn",
    "unicorn/prefer-node-remove": "warn",
    "unicorn/prefer-number-properties": "warn",
    "unicorn/prefer-optional-catch-binding": "warn",
    "unicorn/prefer-query-selector": "warn",
    "unicorn/prefer-reflect-apply": "warn",
    "unicorn/prefer-replace-all": "warn",
    "unicorn/prefer-set-has": "warn",
    "unicorn/prefer-spread": "warn",
    "unicorn/prefer-starts-ends-with": "warn",
    "unicorn/prefer-string-slice": "warn",
    "unicorn/prefer-ternary": "warn",
    "unicorn/prefer-text-content": "warn",
    "unicorn/prefer-trim-start-end": "warn",
    "unicorn/prefer-type-error": "warn",
    // duplicate "unicorn/prevent-abbreviations": "off",
    // duplicate "unicorn/throw-new-error": "warn",
    "prettier/prettier": "warn",
    /*
    |-···――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――···-|


    ―― IMPORT FORMAT BEHAVIOUR

    */
    // Since this plugin does not support sorting require, you might want to enable
    // some other sorting rule only for files that use require:
    "simple-import-sort/imports": "warn",
    "simple-import-sort/exports": "warn",
    "sort-imports": "off",
    "import/default": "error",
    "import/dynamic-import-chunkname": "error",
    "import/export": "error",
    "import/exports-last": "error",
    "import/first": "warn",
    "import/group-exports": "error",
    "import/max-dependencies": "error",
    "import/named": "error",
    "import/namespace": "error",
    "import/newline-after-import": "warn",
    "import/no-absolute-path": "error",
    "import/no-amd": "error",
    "import/no-anonymous-default-export": "error",
    "import/no-commonjs": "error",
    "import/no-default-export": "error",
    "import/no-deprecated": "error",
    "import/no-duplicates": "warn",
    "import/no-dynamic-require": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-internal-modules": "off",
    "import/no-mutable-exports": "error",
    "import/no-named-as-default-member": "error",
    "import/no-named-as-default": "error",
    "import/no-named-default": "error",
    "import/no-named-export": "off",
    "import/no-namespace": "warn",
    "import/no-nodejs-modules": "error",
    "import/no-relative-parent-imports": "off",
    "import/no-restricted-paths": "error",
    "import/no-self-import": "error",
    "import/no-unassigned-import": "error",
    "import/no-unresolved": "error",
    "import/no-unused-modules": "error",
    "import/no-useless-path-segments": "warn",
    "import/no-webpack-loader-syntax": "error",
    "import/order": "warn",
    "import/unambiguous": "error",
    // duplicate "import/extensions":"error",
    // duplicate "import/first":"error",
    // duplicate "import/newline-after-import":"error",
    // duplicate "import/no-cycle":"error",
    // duplicate "import/no-duplicates":"error",
    // duplicate "import/order":"error",
    // duplicate "import/prefer-default-export":"error",
    "filenames/match-regex": [
      "error",
      "^_?([0-9a-z]+)(-?[0-9a-z]+)*_?(.spec)?$",
      true
    ],
    "filenames/match-exported": [
      "error",
      "kebab",
      "camel",
      true
    ],
    "filenames/no-index": "off",
    "accessor-pairs": "error",
    "array-callback-return": "error",
    "block-scoped-var": "error",
    // "callback-return": "error",
    "camelcase": [
      "off",
      {
        "ignoreDestructuring": true,
        "ignoreImports": true
      }
    ],
    "capitalized-comments": "off",
    "class-methods-use-this": "error",
    "complexity": "off",
    "consistent-return": "error",
    "consistent-this": "error",
    "constructor-super": "error",
    "default-case-last": "off",
    "default-case": "error",
    "default-param-last": "error",
    "dot-notation": "off",
    "eqeqeq": [
      "warn",
      "smart"
    ],
    "for-direction": "error",
    "func-name-matching": "error",
    "func-names": "off",
    "func-style": "off",
    "getter-return": "error",
    "grouped-accessor-pairs": "error",
    "guard-for-in": "error",
    // "id-blacklist": "off",
    "id-length": "off",
    "id-match": "off",
    "import/extensions": "off",
    "import/no-cycle": "off",
    "import/prefer-default-export": "off",
    "init-declarations": "off",
    "line-comment-position": "off",
    "max-classes-per-file": "off",
    "max-depth": "off",
    "max-lines-per-function": "off",
    "max-lines": "off",
    "max-nested-callbacks": "off",
    "max-params": "off",
    "max-statements-per-line": "off",
    "max-statements": "off",
    "multiline-comment-style": "off",
    "new-cap": [
      "error",
      {
        "capIsNewExceptions": [
          "MONGO_DB_LUXCIUM0_URI",
          "MONGO_DB_LOCAL_URI"
        ]
      }
    ],
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-console": "off",
    "no-const-assign": "error",
    "no-constant-condition": "error",
    "no-constructor-return": "off",
    "no-continue": "error",
    "no-control-regex": "error",
    "no-debugger": "off",
    "no-delete-var": "error",
    "no-div-regex": "warn",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "error",
    "no-else-return": "warn",
    "no-empty-character-class": "error",
    "no-empty-function": "off",
    "no-empty-pattern": "error",
    "no-empty": "error",
    "no-eq-null": "off",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "warn",
    "no-extra-boolean-cast": "warn",
    "no-extra-label": "warn",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "warn",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-import-assign": "error",
    "no-inline-comments": "off",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-invalid-this": "error",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "warn",
    "no-loop-func": "error",
    "no-magic-numbers": "off",
    "no-misleading-character-class": "error",
    "no-multi-assign": "error",
    "no-multi-str": "error",
    "no-negated-condition": "off",
    "no-nested-ternary": "off",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-new": "error",
    "no-obj-calls": "error",
    "no-octal-escape": "error",
    "no-octal": "error",
    "no-param-reassign": "error",
    "no-plusplus": "error",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "warn",
    "no-restricted-globals": "error",
    "no-restricted-imports": "error",
    "no-restricted-properties": "error",
    "no-restricted-syntax": "error",
    "no-return-assign": "error",
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-setter-return": "error",
    "no-shadow-restricted-names": "error",
    "no-shadow": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-ternary": "off",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-undef-init": "warn",
    "no-undef": "off",
    "no-undefined": "off",
    "no-underscore-dangle": "off",
    "no-unmodified-loop-condition": "error",
    "no-unneeded-ternary": "warn",
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unused-expressions": "off",
    "no-unused-labels": "warn",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-computed-key": "warn",
    "no-useless-concat": "error",
    "no-useless-constructor": "off",
    "no-useless-escape": "error",
    "no-useless-rename": "warn",
    "no-useless-return": "warn",
    "no-var": "warn",
    "no-void": "off",
    "no-warning-comments": "warn",
    "no-with": "error",
    "object-shorthand": "warn",
    "one-var": "off",
    "operator-assignment": "warn",
    "padding-line-between-statements": "warn",
    "prefer-const": "warn",
    "prefer-destructuring": "warn",
    // duplicate "prefer-exponentiation-operator": "warn",
    "prefer-named-capture-group": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-regex-literals": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "warn",
    "radix": "error",
    "require-atomic-updates": "error",
    "require-await": "off",
    "require-unicode-regexp": "error",
    "require-yield": "error",
    "sort-keys": [
      "off",
      "asc",
      {
        "caseSensitive": true,
        "natural": true,
        "minKeys": 2
      }
    ],
    "sort-vars": "warn",
    "spaced-comment": "warn",
    "symbol-description": "error",
    "use-isnan": "error",
    "valid-typeof": "error",
    "vars-on-top": "error",
    "yoda": "warn",
    "security/detect-buffer-noassert": "error",
    "security/detect-child-process": "error",
    "security/detect-disable-mustache-escape": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-new-buffer": "error",
    "security/detect-no-csrf-before-method-override": "error",
    "security/detect-non-literal-fs-filename": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-non-literal-require": "error",
    "security/detect-object-injection": "error",
    "security/detect-possible-timing-attacks": "error",
    "security/detect-pseudoRandomBytes": "error",
    "security/detect-unsafe-regex": "error",
    "sort-keys-fix/sort-keys-fix": [
      "warn",
      "asc",
      {
        "caseSensitive": true,
        "natural": true
      }
    ],
    "unicorn/prevent-abbreviations": [
      "off",
      {
        "whitelist": {
          "_db": true
        }
      }
    ],
    // "unicorn/regex-shorthand": "warn",
    "unicorn/string-content": "warn",
    "unicorn/throw-new-error": "warn",
    "@typescript-eslint/explicit-function-return-type": [
      "off",
      {
        "allowExpressions": false,
        "allowTypedFunctionExpressions": true,
        "allowHigherOrderFunctions": true
      }
    ],
    // "newline-before-return": "off",
    // "indent-legacy": "off",
    // "lines-around-directive": "off",
    // "newline-after-var": "off",
    // "prefer-reflect": "off",
    // "no-spaced-func": "off",
    // "no-catch-shadow": "off",
    // "no-native-reassign": "off",
    // "no-negated-in-lhs": "off",
    // "handle-callback-err": "off",
    // "no-mixed-requires": "off",
    // "global-require": "off",
    // "no-buffer-constructor": "off",
    // "no-new-require": "off",
    // "no-path-concat": "off",
    // "no-process-env": "off",
    // "no-process-exit": "off",
    // "no-restricted-modules": "off",
    // "no-sync": "off",
    "prefer-numeric-literals": "off",
    "strict": "off",
    "unicorn/no-nested-ternary": "off",
    "unicorn/number-literal-case": "off",
    // The following rules can be used in some cases. See the README for more
    // information. (These are marked with `0` instead of `"off"` so that a
    // script can distinguish them.)
    "arrow-body-style": "off",
    "curly": "off",
    "lines-around-comment": "off",
    // "max-len": [
    //   "warn",
    //   {
    //     "code": 80,
    //     "ignorePattern": "^[import export].*",
    //     "comments": 120,
    //     "ignoreTrailingComments": true
    //   }
    // ],
    "no-confusing-arrow": "off",
    "no-mixed-operators": "off",
    "no-tabs": "off",
    "no-unexpected-multiline": "off",
    "prefer-arrow-callback": "off",
    "quotes": "off",
    // The rest are rules that you never need to enable when using Prettier.
    "array-bracket-newline": "off",
    "array-bracket-spacing": "off",
    "array-element-newline": "off",
    "arrow-parens": "off",
    "arrow-spacing": "off",
    "block-spacing": "off",
    "brace-style": "off",
    "comma-dangle": "off",
    "comma-spacing": "off",
    "comma-style": "off",
    "computed-property-spacing": "off",
    "dot-location": "off",
    "eol-last": "off",
    "func-call-spacing": "off",
    "function-call-argument-newline": "off",
    "function-paren-newline": "off",
    // "generator-star": "off",
    "generator-star-spacing": "off",
    "implicit-arrow-linebreak": "off",
    "indent": "off",
    "jsx-quotes": "off",
    "key-spacing": "off",
    "keyword-spacing": "off",
    "linebreak-style": "off",
    "multiline-ternary": "off",
    "newline-per-chained-call": "off",
    "new-parens": "off",
    // "no-arrow-condition": "off",
    // "no-comma-dangle": "off",
    "no-extra-parens": "off",
    "no-extra-semi": "off",
    "no-floating-decimal": "off",
    "no-mixed-spaces-and-tabs": "off",
    "no-multi-spaces": "off",
    "no-multiple-empty-lines": "off",
    // "no-reserved-keys": "off",
    // "no-space-before-semi": "off",
    "no-trailing-spaces": "off",
    "no-whitespace-before-property": "off",
    // "no-wrap-func": "off",
    "nonblock-statement-body-position": "off",
    "object-curly-newline": "off",
    "object-curly-spacing": "off",
    "object-property-newline": "off",
    "one-var-declaration-per-line": "off",
    "operator-linebreak": "off",
    "padded-blocks": "off",
    "quote-props": "off",
    "rest-spread-spacing": "off",
    "semi": "off",
    "semi-spacing": "off",
    "semi-style": "off",
    // "space-after-function-name": "off",
    // "space-after-keywords": "off",
    "space-before-blocks": "off",
    "space-before-function-paren": "off",
    // "space-before-function-parentheses": "off",
    // "space-before-keywords": "off",
    // "space-in-brackets": "off",
    "space-in-parens": "off",
    "space-infix-ops": "off",
    // "space-return-throw-case": "off",
    "space-unary-ops": "off",
    // "space-unary-word-ops": "off",
    "switch-colon-spacing": "off",
    "template-curly-spacing": "off",
    "template-tag-spacing": "off",
    "unicode-bom": "off",
    "wrap-iife": "off",
    "wrap-regex": "off",
    "yield-star-spacing": "off"
    // "@typescript-eslint/explicit-member-accessibility": "off"
  },
  "overrides": [
    {
      // enable the rule specifically for TypeScript files
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-types": "warn",
        "@typescript-eslint/brace-style": "off",
        "@typescript-eslint/class-literal-property-style": "warn",
        "@typescript-eslint/comma-spacing": "off",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "error"
        ],
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/func-call-spacing": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/init-declarations": "off",
        "@typescript-eslint/keyword-spacing": "off",
        "@typescript-eslint/member-delimiter-style": "off",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/method-signature-style": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-array-constructor": "warn",
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-dupe-class-members": "error",
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-extra-non-null-assertion": "warn",
        "@typescript-eslint/no-extra-parens": "off",
        // "@typescript-eslint/no-extra-semi": "off",
        "@typescript-eslint/no-extraneous-class": "error",
        "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreVoid": true,
            "ignoreIIFE": true
          }
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-require-imports": "off",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/no-type-alias": "off",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        // "@typescript-eslint/no-unused-vars-experimental": "warn",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-as-const": "warn",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-namespace-keyword": "warn",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-readonly": "off",
        "@typescript-eslint/prefer-reduce-type-parameter": "off",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "warn",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/require-array-sort-compare": "error",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/return-await": "off",
        "@typescript-eslint/semi": "off",
        "@typescript-eslint/space-before-function-paren": "off",
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/type-annotation-spacing": "off",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/unified-signatures": "error"
        // "@typescript-eslint/no-untyped-public-signature": "off",
        // "@typescript-eslint/ban-ts-ignore": "off",
        // "@typescript-eslint/camelcase": "off",
        // "@typescript-eslint/class-name-casing": "off",
        // "@typescript-eslint/generic-type-naming": "off",
        // "@typescript-eslint/interface-name-prefix": "off",
        // "@typescript-eslint/member-naming": "off"
      }
    }
  ]
}
/*

Rules
Static analysis
Ensure imports point to a file/module that can be resolved. (import/no-unresolved)
Ensure named imports correspond to a named export in the remote file. (import/named)
Ensure a default export is present, given a default import. (import/default)
Ensure imported namespaces contain dereferenced properties as they are dereferenced. (import/namespace)
Restrict which files can be imported in a given folder (import/no-restricted-paths)
Forbid import of modules using absolute paths (import/no-absolute-path)
Forbid require(import/) calls with expressions (import/no-dynamic-require)
Prevent importing the submodules of other modules (import/no-internal-modules)
Forbid webpack loader syntax in imports (import/no-webpack-loader-syntax)
Forbid a module from importing itself (import/no-self-import)
Forbid a module from importing a module with a dependency path back to itself (import/no-cycle)
Prevent unnecessary path segments in import and require statements (import/no-useless-path-segments)
Forbid importing modules from parent directories (import/no-relative-parent-imports)
Helpful warnings
Report any invalid exports, i.e. re-export of the same name (import/export)
Report use of exported name as identifier of default export (import/no-named-as-default)
Report use of exported name as property of default export (import/no-named-as-default-member)
Report imported names marked with @deprecated documentation tag (import/no-deprecated)
Forbid the use of extraneous packages (import/no-extraneous-dependencies)
Forbid the use of mutable exports with var or let. (import/no-mutable-exports)
Report modules without exports, or exports without matching import in another module (import/no-unused-modules)
Module systems
Report potentially ambiguous parse goal (import/script vs. module) (import/unambiguous)
Report CommonJS require calls and module.exports or exports.*. (import/no-commonjs)
Report AMD require and define calls. (import/no-amd)
No Node.js builtin modules. (import/no-nodejs-modules)
Style guide
Ensure all imports appear before other statements (import/first)
Ensure all exports appear after other statements (import/exports-last)
Report repeated import of the same module in multiple places (import/no-duplicates)
Forbid namespace (import/a.k.a. "wildcard" *) imports (import/no-namespace)
Ensure consistent use of file extension within the import path (import/extensions)
Enforce a convention in module import order (import/order)
Enforce a newline after import statements (import/newline-after-import)
Prefer a default export if module exports a single name (import/prefer-default-export)
Limit the maximum number of dependencies a module can have (import/max-dependencies)
Forbid unassigned imports (import/no-unassigned-import)
Forbid named default exports (import/no-named-default)
Forbid default exports (import/no-default-export)
Forbid named exports (import/no-named-export)
Forbid anonymous values as default exports (import/no-anonymous-default-export)
Prefer named exports to be grouped together in a single export declaration (import/group-exports)
Enforce a leading comment with the webpackChunkName for dynamic imports (import/dynamic-import-chunkname)

eslint:recommended



(import/no-unresolved)
(import/named)
(import/default)
(import/namespace)
(import/no-restricted-paths)
(import/no-absolute-path)
(import/no-dynamic-require)
(import/no-internal-modules)
(import/no-webpack-loader-syntax)
(import/no-self-import)
(import/no-cycle)
(import/no-useless-path-segments)
(import/no-relative-parent-imports)
(import/export)
(import/no-named-as-default)
(import/no-named-as-default-member)
(import/no-deprecated)
(import/no-extraneous-dependencies)
(import/no-mutable-exports)
(import/no-unused-modules)
(import/unambiguous)
(import/no-commonjs)
(import/no-amd)
(import/no-nodejs-modules)
(import/first)
(import/exports-last)
(import/no-duplicates)
(import/no-namespace)
(import/extensions)
(import/order)
(import/newline-after-import)
(import/prefer-default-export)
(import/max-dependencies)
(import/no-unassigned-import)
(import/no-named-default)
(import/no-default-export)
(import/no-named-export)
(import/no-anonymous-default-export)
(import/group-exports)
(import/dynamic-import-chunkname)

*/
